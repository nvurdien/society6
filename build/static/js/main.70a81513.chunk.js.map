{"version":3,"sources":["components/card/card.tsx","views/app/App.tsx","reportWebVitals.js","index.tsx"],"names":["Card","key","image","image_alt","title","promote_cnt","artist_display_name","price","className","src","alt","style","textDecoration","uk-icon","App","props","state","data","attributes","cards","fetch","then","response","ok","json","Error","statusText","setState","catch","err","console","error","uk-grid","this","length","map","card","index","id","product","artist","display_name","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAoBeA,EAjBF,SAACC,EAAaC,EAAeC,EAAmBC,EAAeC,EAAoBC,EAA4BC,GAA/G,OACT,8BACI,sBAAKC,UAAU,yBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKC,IAAKP,EAAOQ,IAAKP,MAE1B,sBAAKK,UAAU,eAAf,UACI,oBAAIA,UAAU,sCAAd,SAAqDJ,IACrD,yBAAQI,UAAU,2BAA2BG,MAAO,CAACC,eAAgB,QAArE,UACI,sBAAMC,UAAQ,2BADlB,IACoDR,KAEpD,mBAAGG,UAAU,uBAAb,SAAqCF,IACrC,kCAAKC,YAXPN,ICCOa,E,kDAEnB,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACXC,KAAM,CACJA,KAAM,CACJC,WAAY,CACVC,MAAO,OANM,E,qDAavB,WAAqB,IAAD,OAClBC,MAAM,4EACLC,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACV,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,eAE1BL,MAAK,SAACJ,GAAD,OAAqB,EAAKU,SAAS,CAACV,KAAMA,OAC/CW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,oBAG9B,WACE,OACE,qBAAKrB,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBwB,UAAQ,GAA5C,SAEEC,KAAKjB,MAAMC,KAAKA,KAAKC,WAAWC,MAAMe,OAAS,EAC7CD,KAAKjB,MAAMC,KAAKA,KAAKC,WAAWC,MAAMgB,KACpC,SAACC,EAAgBC,GAAjB,OACErC,EAAK,GAAD,OACCoC,EAAKE,GADN,YACYD,GACdD,EAAKA,KAAKlC,MAAMO,IAChB2B,EAAKA,KAAKlC,MAAMQ,IAChB0B,EAAKA,KAAKhC,MACVgC,EAAKG,QAAQlC,YACb+B,EAAKI,OAAOC,aACZL,EAAKG,QAAQhC,UAEf,a,GA5CiBmC,IAAMC,WCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.70a81513.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nconst Card = (key: string, image: string, image_alt: string, title: string, promote_cnt:number, artist_display_name:string, price:number): React.ReactNode => \n    <div key={key}>\n        <div className=\"uk-card uk-text-center\">\n            <div className=\"uk-card-media-top\">\n                <img src={image} alt={image_alt} />\n            </div>\n            <div className=\"uk-card-body\">\n                <h3 className=\"uk-card-title uk-margin-small-right\">{title}</h3>\n                <button className=\"uk-button uk-button-link\" style={{textDecoration: 'none'}}>\n                    <span uk-icon=\"icon: heart; ratio: .8\"></span> {promote_cnt}\n                </button>\n                <p className=\"uk-margin-remove-top\">{artist_display_name}</p>\n                <p>${price}</p>\n            </div>\n        </div>\n    </div>;\n\nexport default Card;","import './App.css';\nimport Card from '../../components/card/card';\nimport {CardData, ServerData} from '../../utilities/interfaces/card';\nimport React from 'react';\n\nexport default class App extends React.Component<{}, { data: ServerData }> {\n\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      data: {\n        data: {\n          attributes: {\n            cards: []\n          }\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://raw.githubusercontent.com/dkdemand/plp-exercise/main/search.json')\n    .then(response => {\n      if(response.ok) {\n        return response.json();\n      }\n      throw new Error(response.statusText);\n    })\n    .then((data:ServerData) => this.setState({data: data}))\n    .catch(err => console.error(err))\n  }\n\n  render(){\n    return (\n      <div className=\"uk-padding\">\n        <div className=\"uk-child-width-1-3\" uk-grid=\"\">\n          {\n          this.state.data.data.attributes.cards.length > 0 ?\n            this.state.data.data.attributes.cards.map(\n              (card: CardData, index: number) => \n                Card(\n                  `${card.id} ${index}`,\n                  card.card.image.src,\n                  card.card.image.alt,\n                  card.card.title,\n                  card.product.promote_cnt,\n                  card.artist.display_name,\n                  card.product.price\n                )) \n              : null\n          }\n        </div>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}